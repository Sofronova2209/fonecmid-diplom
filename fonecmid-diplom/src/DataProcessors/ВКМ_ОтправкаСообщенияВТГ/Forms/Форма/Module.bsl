
&НаСервере
Процедура ОтправитьИзСправочникУведомленияНаСервере()
	 // 1. Создаем HTTP-соединение
	HTTPСоединение = Новый HTTPСоединение("api.telegram.org", 443, ,, , , Новый ЗащищенноеСоединениеOpenSSL());

    // 2. Формируем URL для запроса
   ТокенБота = Константы.ВКМ_ТокенУправленияТГБотом.Получить(); // Получаем токен из константы

    ДанныеДляЗапроса = "bot" + ТокенБота + "/sendMessage";

    // 3. Формируем HTTP-запрос
    HTTPЗапрос = Новый HTTPЗапрос(ДанныеДляЗапроса);
    

    // 4. Добавляем заголовки
    HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");

    // 5. Получаем данные из справочника ВКМ_УведомленияТБоту
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |	ВКМ_УведомленияТБоту.Ссылка КАК Ссылка,
        |	ВКМ_УведомленияТБоту.ТекстСообщения КАК Текст
        |ИЗ
        |	Справочник.ВКМ_УведомленияТБоту КАК ВКМ_УведомленияТБоту";

    РезультатЗапроса = Запрос.Выполнить();

    Выборка = РезультатЗапроса.Выбрать();
  
    // 6. Получаем ИдентификаторГруппыДляОповещения из константы
    ИдентификаторГруппыДляОповещения = Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить();

Пока Выборка.Следующий() Цикл
	
	 ТекстСообщенияИзСправочника = Выборка.Текст;
    // 6. Обрабатываем результат запроса (формируем структуру)
    Сообщение = Новый Структура();
    Сообщение.Вставить("chat_id", ИдентификаторГруппыДляОповещения);
    Сообщение.Вставить("text", ТекстСообщенияИзСправочника);

    // 7. Создаем JSON-строку и устанавливаем ее в тело запроса
    
    СтрокаJSON= СтрокаJSON(Сообщение);

    HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON);

    // Отправляем запрос
    HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);

    // 8. Проверяем код состояния
    Если HTTPОтвет.КодСостояния = 200 Тогда
        // Удаляем элемент справочника
        ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
        ДокОбъект.Удалить();
        Сообщить("Сообщение отправлено");
    Иначе
        // Если код состояния не 200, тогда записываем в ЖР сообщение об ошибке.
        ИнформацияОбОшибке = ИнформацияОбОшибке();
        ЗаписьЖурналаРегистрации("HTTPСервисы.Ошибка", УровеньЖурналаРегистрации.Ошибка, , , ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
        Возврат;
    КонецЕсли;
    КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьИзСправочникУведомления(Команда)
	ОтправитьИзСправочникУведомленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()Экспорт
	 // 1. Создаем HTTP-соединение
	HTTPСоединение = Новый HTTPСоединение("api.telegram.org", 443, ,, , , Новый ЗащищенноеСоединениеOpenSSL());

    // 2. Формируем URL для запроса
   ТокенБота = Константы.ВКМ_ТокенУправленияТГБотом.Получить(); // Получаем токен из константы

    URL = "bot" + ТокенБота + "/sendMessage";

    // 3. Формируем HTTP-запрос
    HTTPЗапрос = Новый HTTPЗапрос();
    HTTPЗапрос.АдресРесурса = URL;

    // 4. Добавляем заголовки
    HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");

   

    // 6. Получаем ИдентификаторГруппыДляОповещения из константы
    ИдентификаторГруппыДляОповещения = Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить();

    // 6. Обрабатываем результат запроса (формируем структуру)
    Сообщение = Новый Структура();
    Сообщение.Вставить("chat_id", ИдентификаторГруппыДляОповещения);
    Сообщение.Вставить("text", Объект.Текст);

    // 7. Создаем JSON-строку и устанавливаем ее в тело запроса
   
    СтрокаJSON= СтрокаJSON(Сообщение);

    HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON);

    // Отправляем запрос
    HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);

    // 8. Проверяем код состояния
    Если HTTPОтвет.КодСостояния = 200 Тогда
        // Удаляем элемент справочника
        Сообщить("Сообщение отправлено");
       // ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
        //ДокОбъект.Удалить();
    Иначе
        // Если код состояния не 200, тогда записываем в ЖР сообщение об ошибке.
        ИнформацияОбОшибке = ИнформацияОбОшибке();
        ЗаписьЖурналаРегистрации("HTTPСервисы.Ошибка", УровеньЖурналаРегистрации.Ошибка, , , ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
        Возврат;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьНаСервере();
КонецПроцедуры

&НаСервере
Функция СтрокаJSON(ОбъектJSON)
	
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(,Символы.Таб);
	
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(ПараметрыЗаписи);
	ЗаписатьJSON(Запись, ОбъектJSON);
	
	Возврат Запись.Закрыть();
	
	КонецФункции
