
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт	
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры


 // {{Sofronova NV:Добавление команды Печати 
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Форма Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт работ'");
	КомандаПечати.Порядок = 5;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Акт");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьАкт(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт работ'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьАкт(МассивОбъектов, ОбъектыПечати)
	
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Акт";
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
		
		ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
		
		ПервыйДокумент = Истина;
		
		Пока ДанныеДокументов.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				// Все документы нужно выводить на разных страницах.
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ВывестиЗаголовокАкт(ДанныеДокументов, ТабличныйДокумент, Макет); 
			ВывестиШапкаАкт(ДанныеДокументов, ТабличныйДокумент, Макет);
			ВывестиСписокТоваровАкт(ДанныеДокументов, ТабличныйДокумент, Макет);
			ВывестиПодвалАкт(ДанныеДокументов, ТабличныйДокумент, Макет);
			
			// В табличном документе необходимо задать имя области, в которую был 
			// выведен объект. Нужно для возможности печати комплектов документов.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
			
		КонецЦикла;	
		
		//Устанавливаем параметры
		ТабличныйДокумент.АвтоМасштаб=ложь;
		ТабличныйДокумент.МасштабПечати = 85;
		
		Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДокументов(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.Услуги.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма) КАК Услуги,
	|	РеализацияТоваровУслуг.Ответственный КАК Ответственный,
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Договор.Наименование КАК Договор,
	|	РеализацияТоваровУслуг.Контрагент.Наименование КАК Контрагент,
	|	РеализацияТоваровУслуг.Организация.Наименование КАК Организация
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&МассивОбъектов)";
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
	Возврат Запрос.Выполнить().Выбрать();
	
	
КонецФункции



Процедура ВывестиЗаголовокАкт(ДанныеДокументов, ТабличныйДокумент, Макет)
	
 
	ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Заголовок");
	
	ДанныеПечати = Новый Структура;
	
	ШаблонЗаголовка = "Акт выполненных работ № %1 от %2";
	ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
	ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	
	ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
	
КонецПроцедуры

Процедура ВывестиШапкаАкт(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка"); 
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Договор", ДанныеДокументов.Договор);
	ДанныеПечати.Вставить("Контрагент", ДанныеДокументов.Контрагент);
	ДанныеПечати.Вставить("Организация", ДанныеДокументов.Организация);
		
	ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
КонецПроцедуры

Процедура ВывестиСписокТоваровАкт(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("СписокТоваровШапка"); 
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	ВыборкаТовары = ДанныеДокументов.Услуги.Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиПодвалАкт(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал"); 
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Ответственный", ДанныеДокументов.Ответственный);
			
	ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПодвал);

	
КонецПроцедуры 
//}}

#КонецОбласти



#КонецЕсли